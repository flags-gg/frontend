# Base
FROM containers.chewed-k8s.net/docker_hub_cache/library/node:20-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

## Copy the files
WORKDIR /frontend
COPY package*.json ./
COPY pnpm-lock.yaml ./
COPY public ./public
COPY src ./src
COPY public ./public
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tsconfig.json ./
COPY tsconfig.node.json ./
COPY .eslintrc.cjs ./
COPY index.html ./

# Build
FROM base AS build
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

## Set Args
ARG KEYCLOAK_SECRET
ARG GIT_BUILD
ARG GIT_VERSION
ARG FLAGS_COMPANY_ID
ARG FLAGS_AGENT_ID
ARG FLAGS_ENVIRONMENT_ID
ARG FLAGS_API_URL

## Set Envs for build
ENV VITE_KEYCLOAK_SECRET=$KEYCLOAK_SECRET
ENV VITE_COMMIT_HASH=$GIT_BUILD
ENV VITE_GIT_TAG=$GIT_VERSION
ENV VITE_FLAGS_COMPANY_ID=$FLAGS_COMPANY_ID
ENV VITE_FLAGS_AGENT_ID=$FLAGS_AGENT_ID
ENV VITE_FLAGS_ENVIRONMENT_ID=$FLAGS_ENVIRONMENT_ID
ENV VITE_FLAGS_API_SERVER=$FLAGS_API_URL

RUN pnpm build

# Runner
FROM containers.chewed-k8s.net/docker_hub_cache/library/node:20-alpine AS runner
WORKDIR /runner
COPY --from=build /frontend/dist /runner
RUN npm install -g serve

CMD ["serve", "-s", "/runner", "-l", "80"]

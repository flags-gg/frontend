# Base
FROM containers.chewed-k8s.net/docker_hub_cache/library/node:20-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Copy the files
WORKDIR /frontend
COPY package*.json ./
COPY pnpm-lock.yaml ./
COPY public ./public
COPY src ./src
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tsconfig.json ./
COPY tsconfig.node.json ./
COPY .eslintrc.cjs ./
COPY index.html ./
COPY k8s/serve.json ./serve.json

# Set Args
ARG GIT_BUILD
ARG GIT_VERSION

ARG FLAGS_PROJECT_ID
ARG FLAGS_AGENT_ID
ARG FLAGS_ENVIRONMENT_ID

# Set Envs for build
ENV VITE_COMMIT_HASH=$GIT_BUILD
ENV VITE_GIT_TAG=$GIT_VERSION

ENV VITE_FLAGS_PROJECT_ID=$FLAGS_PROJECT_ID
ENV VITE_FLAGS_AGENT_ID=$FLAGS_AGENT_ID
ENV VITE_FLAGS_ENVIRONMENT_ID=$FLAGS_ENVIRONMENT_ID

# Create .env.production file
RUN echo "VITE_COMMIT_HASH=$GIT_BUILD" > .env.production && \
    echo "VITE_GIT_TAG=$GIT_VERSION" >> .env.production && \
    echo "VITE_FLAGS_PROJECT_ID=$FLAGS_PROJECT_ID" >> .env.production && \
    echo "VITE_FLAGS_AGENT_ID=$FLAGS_AGENT_ID" >> .env.production && \
    echo "VITE_FLAGS_ENVIRONMENT_ID=$FLAGS_ENVIRONMENT_ID" >> .env.production

# Build
FROM base AS build
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm build

# Runner
FROM containers.chewed-k8s.net/docker_hub_cache/library/node:20-alpine AS runner
WORKDIR /runner
COPY --from=build /frontend/dist /runner
COPY --from=build /frontend/serve.json /runner/serve.json
RUN npm install -g serve

CMD ["serve", "-l", "80", "-u", "/runner", "-c", "/runner/serve.json"]

# Base
FROM containers.chewed-k8s.net/docker_hub_cache/library/node:20-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

## Copy the files
WORKDIR /frontend
COPY package*.json ./
COPY pnpm-lock.yaml ./
COPY public ./public
COPY src ./src
COPY public ./public
COPY tsconfig.json ./
COPY config-overrides.js ./

## Set Args
ARG KEYCLOAK_SECRET
ARG BUILD
ARG VERSION

## Set Envs for build
ENV REACT_APP_KEYCLOAK_SECRET=${KEYCLOAK_SECRET}
ENV REACT_APP_COMMIT_HASH=${BUILD}
ENV REACT_APP_GIT_TAG=${VERSION}

# Install dependencies
FROM base AS dependencies
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile --production

## Set Envs for build
ENV REACT_APP_KEYCLOAK_SECRET=${KEYCLOAK_SECRET}
ENV REACT_APP_COMMIT_HASH=${BUILD}
ENV REACT_APP_GIT_TAG=${VERSION}

# Build
FROM base AS build
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
## Set Envs for build
ENV REACT_APP_KEYCLOAK_SECRET=${KEYCLOAK_SECRET}
ENV REACT_APP_COMMIT_HASH=${BUILD}
ENV REACT_APP_GIT_TAG=${VERSION}

RUN pnpm build

# Runner
FROM containers.chewed-k8s.net/docker_hub_cache/library/node:20-alpine AS runner
WORKDIR /runner
COPY --from=build /frontend/build /runner
RUN npm install -g serve

## Set Envs for build
ENV REACT_APP_KEYCLOAK_SECRET=${KEYCLOAK_SECRET}
ENV REACT_APP_COMMIT_HASH=${BUILD}
ENV REACT_APP_GIT_TAG=${VERSION}

CMD ["serve", "-s", "/runner", "-l", "80"]
